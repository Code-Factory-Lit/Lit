<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.lit.mapper.review.ReviewMapper">
    <!--    ###############################동적 쿼리 쓸것-->
    <select id="getList" resultType="reviewVO">

    </select>
    <!--    ###############################동적 쿼리 쓸것-->

    <insert id="insert">
        <selectKey keyProperty="reviewNumber" resultType="long" order="BEFORE">
            SELECT SEQ_REVIEW.NEXTVAL FROM DUAL
        </selectKey>
        INSERT INTO TBL_REVIEW
        (REVIEW_NUMBER, USER_NUMBER, PROJECT_NUMBER, CONTENT)
        VALUES(#{reviewNumber}, #{userNumber}, #{projectNumber}, #{content})
    </insert>

    <!--    ###################### 닉네임 이슈로 resultType 변경 검토 ############# -->
    <select id="get" resultType="reviewVO">
        SELECT US.NICKNAME , US.CONTENT ,RV.CONTENT ,RV.CONTENT
        FROM TBL_REVIEW RV, TBL_USER US
        WHERE RV.USER_NUMBER = US.USER_NUMBER
        AND RV.REVIEW_NUMBER = #{reviewNumber};
    </select>
    <!--    ###################### 닉네임 이슈로 resultType 변경 검토 ############# -->

    <delete id="delete">
        DELETE FROM TBL_REVIEW WHERE REVIEW_NUMBER = #{reviewNumber}
    </delete>

    <update id="update">
        UPDATE TBL_REVIEW
        SET CONTENT = #{content}, REGISTER_DATE = SYSDATE
        WHERE REVIEW_NUMBER = #{reviewNumber}
    </update>

    <select id="getTotal" resultType="_int">
        SELECT COUNT(REVIEW_NUMBER) FROM TBL_REVIEW
    </select>

    <select id="resultCount" resultType="_int">
        SELECT COUNT(RV.REVIEW_NUMBER)
        FROM TBL_REVIEW RV, TBL_USER US, TBL_PROJECT PJ
        WHERE RV.USER_NUMBER = US.USER_NUMBER
        AND RV.PROJECT_NUMBER = PJ.PROJECT_NUMBER ;
    </select>

    <select id="searchReview" resultType="reviewDTO">
    SELECT TOTAL,
    REVIEW_NUMBER, USER_NUMBER, PROJECT_NUMBER, CONTENT, REGISTER_DATE,
    CATEGORY, STATUS,
    EMAIL
    FROM(
        SELECT ROWNUM RN, TOTAL, REVIEW_NUMBER, USER_NUMBER, PROJECT_NUMBER, CONTENT, REGISTER_DATE,
        CATEGORY, STATUS,
        EMAIL
        FROM(
            SELECT COUNT(r.REVIEW_NUMBER) OVER() AS TOTAL,
            r.REVIEW_NUMBER, r.USER_NUMBER, r.PROJECT_NUMBER, r.CONTENT, r.REGISTER_DATE,
            p.CATEGORY, p.STATUS,
            u.EMAIL
            FROM TBL_USER u
            INNER JOIN TBL_REVIEW r
            ON r.USER_NUMBER = u.USER_NUMBER
            INNER JOIN TBL_PROJECT p
            ON p.PROJECT_NUMBER = r.PROJECT_NUMBER
            WHERE
            <choose>
                <when test="type.equals('email')">
                    u.${type}
                </when>
                <otherwise>
                    r.${type}
                </otherwise>
            </choose>
            LIKE '%'||#{keyword}||'%'
            <if test="category != null and category != ''">
                AND p.CATEGORY = #{category}
            </if>
            <if test="startDate != null and startDate != ''">
                <![CDATA[
            AND TO_CHAR(r.REGISTER_DATE, 'yyyy-mm-dd') >= #{startDate}
            ]]>
            </if>
            <if test="endDate != null and endDate != ''">
                <![CDATA[
            AND TO_CHAR(r.REGISTER_DATE, 'yyyy-mm-dd') <= #{endDate}
            ]]>
            </if>
            <if test="status != null and status != ''">
                AND p.STATUS = #{status}
            </if>
        )
        <![CDATA[
            WHERE ROWNUM <= #{pageNum} * #{amount}
            ]]>
    )
    <![CDATA[
    WHERE RN > (#{pageNum} - 1) * #{amount}
    ]]>

    </select>
    <select id="getTotalToday" resultType="_int">
        SELECT COUNT(REVIEW_NUMBER) FROM TBL_REVIEW
        WHERE TO_CHAR(REGISTER_DATE, 'yyyy-mm-dd') = TO_CHAR(SYSDATE, 'yyyy-mm-dd')
    </select>
    <select id="getReviewChart" resultType="long">
        SELECT COUNT(REVIEW_NUMBER)
        FROM TBL_REVIEW
        WHERE TO_CHAR(REGISTER_DATE, 'yyyy-mm-dd') = #{date}
    </select>

</mapper>