CREATE TABLE TBL_USER (
    USER_NUMBER	NUMBER PRIMARY KEY,
	EMAIL	VARCHAR2(1000) NOT NULL,
	NAME	VARCHAR2(1000) NOT NULL,
	NICKNAME	VARCHAR2(1000) NOT NULL,
	PASSWORD	VARCHAR2(1000) NOT NULL,
	CONTENT	VARCHAR2(1000),
	KAKAO	VARCHAR2(1000),
	REGISTER_DATE DATE DEFAULT SYSDATE,
	ACHIEVEMENT_NUMBER	NUMBER
);

CREATE TABLE TBL_USER_FILE (
    UUID VARCHAR2(1000) PRIMARY KEY,
   	UPLOAD_PATH VARCHAR2(1000) NOT NULL,
   	NAME VARCHAR2(2000) NOT NULL,
   	IMAGE CHAR(1),
   	USER_NUMBER	NUMBER,
   	CONSTRAINT FK_FILE_USER_NUMBER FOREIGN KEY(USER_NUMBER)
   	REFERENCES TBL_USER(USER_NUMBER) ON DELETE CASCADE
);



CREATE TABLE TBL_PROJECT (
    PROJECT_NUMBER	NUMBER PRIMARY KEY,
	TITLE	VARCHAR2(1000) NOT NULL,
	CATEGORY	VARCHAR2(1000) NOT NULL,
	CONTENT	VARCHAR2(4000) NOT NULL,
	AUTHENTICATION	VARCHAR2(4000) NOT NULL,
	START_DATE	DATE DEFAULT SYSDATE,
	END_DATE	DATE DEFAULT SYSDATE,
	STATUS NUMBER(3) DEFAULT 0
);

CREATE TABLE TBL_PROJECT_FILE(
   	UUID VARCHAR2(1000) PRIMARY KEY,
   	UPLOAD_PATH VARCHAR2(1000) NOT NULL,
   	NAME VARCHAR2(2000) NOT NULL,
   	IMAGE CHAR(1),
   	PROJECT_NUMBER	NUMBER,
   	CONSTRAINT FK_FILE_PROJECT_NUMBER FOREIGN KEY(PROJECT_NUMBER)
   	REFERENCES TBL_PROJECT(PROJECT_NUMBER) ON DELETE CASCADE
   );
  
  CREATE TABLE TBL_REVIEW(
   	REVIEW_NUMBER	NUMBER PRIMARY KEY,
	USER_NUMBER	NUMBER NOT NULL,
	PROJECT_NUMBER	NUMBER NOT NULL,
	CONTENT	VARCHAR2(4000) NOT NULL,
	REGISTER_DATE DATE DEFAULT SYSDATE,
   	CONSTRAINT FK_REIVEW_PROJECT_NUMBER FOREIGN KEY(PROJECT_NUMBER)
   	REFERENCES TBL_PROJECT(PROJECT_NUMBER) ON DELETE CASCADE,
   	CONSTRAINT FK_REIVEW_USER_NUMBER FOREIGN KEY(USER_NUMBER)
   	REFERENCES TBL_USER(USER_NUMBER) ON DELETE CASCADE
   );
  
    CREATE TABLE TBL_PARTICIPATION(
   	PROJECT_NUMBER	NUMBER,
	USER_NUMBER	NUMBER,
	STATUS	NUMBER(3) NOT NULL,
	REGISTER_DATE	DATE DEFAULT SYSDATE,
   	CONSTRAINT FK_PAR_PROJECT_NUMBER FOREIGN KEY(PROJECT_NUMBER)
   	REFERENCES TBL_PROJECT(PROJECT_NUMBER) ON DELETE CASCADE,
   	CONSTRAINT FK_PAR_USER_NUMBER FOREIGN KEY(USER_NUMBER)
   	REFERENCES TBL_USER(USER_NUMBER) ON DELETE CASCADE,
   	CONSTRAINT PARTICIPATION_PK PRIMARY KEY(PROJECT_NUMBER, USER_NUMBER)
   );
  
  CREATE TABLE TBL_LIKE(
   	REVIEW_NUMBER	NUMBER NOT NULL,
	USER_NUMBER	NUMBER NOT NULL,
   	CONSTRAINT FK_LIKE_REVIEW_NUMBER FOREIGN KEY(REVIEW_NUMBER)
   	REFERENCES TBL_REVIEW(REVIEW_NUMBER) ON DELETE CASCADE,
   	CONSTRAINT FK_LIKE_USER_NUMBER FOREIGN KEY(USER_NUMBER)
   	REFERENCES TBL_USER(USER_NUMBER) ON DELETE CASCADE,
   	CONSTRAINT LIKE_PK PRIMARY KEY(REVIEW_NUMBER, USER_NUMBER)
   );
  
  CREATE TABLE TBL_REVIEW_FILE(
   	UUID VARCHAR2(1000) PRIMARY KEY,
   	UPLOAD_PATH VARCHAR2(1000) NOT NULL,
   	NAME VARCHAR2(2000) NOT NULL,
   	IMAGE CHAR(1),
   	REVIEW_NUMBER	NUMBER,
   	CONSTRAINT FK_FILE_REVIEW_NUMBER FOREIGN KEY(REVIEW_NUMBER)
   	REFERENCES TBL_REVIEW(REVIEW_NUMBER) ON DELETE CASCADE
   );
  
   CREATE TABLE TBL_REPLY(
   	REPLY_NUMBER	NUMBER PRIMARY KEY,
	REVIEW_NUMBER	NUMBER NOT NULL,
	USER_NUMBER	NUMBER NOT NULL,
	CONTENT VARCHAR2(4000) NOT NULL,
	RGISTER_DATE DATE DEFAULT SYSDATE,
   	CONSTRAINT FK_REPLY_REVIEW_NUMBER FOREIGN KEY(REVIEW_NUMBER)
   	REFERENCES TBL_REVIEW(REVIEW_NUMBER) ON DELETE CASCADE,
   	CONSTRAINT FK_REPLY_USER_NUMBER FOREIGN KEY(USER_NUMBER)
   	REFERENCES TBL_USER(USER_NUMBER) ON DELETE CASCADE
   );
  
  
  CREATE TABLE TBL_REPORT(
	REPORT_NUMBER	NUMBER PRIMARY KEY,
	USER_NUMBER	NUMBER NOT NULL,
	REVIEW_NUMBER	NUMBER NOT NULL,
	REASON	VARCHAR2(1000) NOT NULL,    
   	CONSTRAINT FK_REPORT_REVIEW_NUMBER FOREIGN KEY(REVIEW_NUMBER)
   	REFERENCES TBL_REVIEW(REVIEW_NUMBER) ON DELETE CASCADE,
   	CONSTRAINT FK_REPORT_USER_NUMBER FOREIGN KEY(USER_NUMBER)
   	REFERENCES TBL_USER(USER_NUMBER) ON DELETE CASCADE
   );
  
  CREATE TABLE TBL_MESSAGE(
   	SEND_USER_NUMBER	NUMBER NOT NULL,
	RECEIVE_USER_NUMBER	NUMBER NOT NULL,
	ROOM	VARCHAR2(1000),
	CONTENT	VARCHAR2(1000) NOT NULL,
	MESSAGE_DATE	DATE	DEFAULT	SYSDATE,	
   	CONSTRAINT FK_MESSAGE_SEND_NUMBER FOREIGN KEY(SEND_USER_NUMBER)
   	REFERENCES TBL_USER(USER_NUMBER) ON DELETE CASCADE,
   	CONSTRAINT FK_MESSAGE_RECEIVE_NUMBER FOREIGN KEY(RECEIVE_USER_NUMBER)
   	REFERENCES TBL_USER(USER_NUMBER) ON DELETE CASCADE,
   	CONSTRAINT MESSAGE_PK PRIMARY KEY(SEND_USER_NUMBER, RECEIVE_USER_NUMBER)
   );
  
  CREATE TABLE TBL_FOLLOW(
   	FOLLOWING_NUMBER	NUMBER NOT NULL,
	FOLLOWER_NUMBER	NUMBER NOT NULL,
   	CONSTRAINT FK_FOLLOW_FOLLOWING_NUMBER FOREIGN KEY(FOLLOWING_NUMBER)
   	REFERENCES TBL_USER(USER_NUMBER) ON DELETE CASCADE,
   	CONSTRAINT FK_FOLLOW_FOLLOWER_NUMBER FOREIGN KEY(FOLLOWER_NUMBER)
   	REFERENCES TBL_USER(USER_NUMBER) ON DELETE CASCADE,
   	CONSTRAINT FOLLOW_PK PRIMARY KEY(FOLLOWING_NUMBER, FOLLOWER_NUMBER)
   );
  
  CREATE TABLE TBL_ACHIEVEMENT(
   	ACHIEVEMENT_NUMBER	NUMBER PRIMARY KEY,
	USER_NUMBER	NUMBER NOT NULL,
	MEDAL	VARCHAR2(1000),
   	CONSTRAINT FK_ACHIEVEMENT_USER_NUMBER FOREIGN KEY(USER_NUMBER)
   	REFERENCES TBL_USER(USER_NUMBER) ON DELETE CASCADE
   );
  
CREATE SEQUENCE SEQ_USER;
CREATE SEQUENCE SEQ_PROJECT;
CREATE SEQUENCE SEQ_REVIEW;
CREATE SEQUENCE SEQ_REPLY;
CREATE SEQUENCE SEQ_REPORT;
CREATE SEQUENCE SEQ_MESSAGE;
CREATE SEQUENCE SEQ_ACHIEVEMENT;

DROP SEQUENCE SEQ_USER;
DROP SEQUENCE SEQ_PROJECT;
DROP SEQUENCE SEQ_REVIEW;
DROP SEQUENCE SEQ_REPLY;
DROP SEQUENCE SEQ_REPORT;
DROP SEQUENCE SEQ_MESSAGE;
DROP SEQUENCE SEQ_ACHIEVEMENT;

INSERT INTO TBL_USER
(USER_NUMBER, EMAIL, NAME, NICKNAME, PASSWORD)
VALUES(SEQ_BOARD.NEXTVAL, 'test', 'teste', 'teste', '1234');

INSERT INTO TBL_ACHIEVEMENT
(ACHIEVEMENT_NUMBER, USER_NUMBER, MEDAL)
VALUES(SEQ_ACHIEVEMENT.NEXTVAL, 621, 'TESTMEDAL');


SELECT 
FROM 
WHERE 

  
  
